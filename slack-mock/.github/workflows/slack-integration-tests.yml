name: Slack Integration Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  slack-mock-tests:
    runs-on: ubuntu-latest
    
    services:
      slack-mock:
        image: wiremock/wiremock:latest
        ports:
          - 8080:8080
        options: >-
          --health-cmd "curl -f http://localhost:8080/__admin/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
        steps:
        - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install pytest pytest-asyncio requests faker
    
    - name: Wait for WireMock
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:8080/__admin/health; do sleep 2; done'
    
    - name: Load WireMock mappings
      run: |
        curl -X POST http://localhost:8080/__admin/mappings/import \
          -H "Content-Type: application/json" \
          -d @wiremock-mappings/chat-postmessage-success.json
        
        curl -X POST http://localhost:8080/__admin/mappings/import \
          -H "Content-Type: application/json" \
          -d @wiremock-mappings/chat-postmessage-expired-token.json
        
        curl -X POST http://localhost:8080/__admin/mappings/import \
          -H "Content-Type: application/json" \
          -d @wiremock-mappings/chat-postmessage-rate-limited.json
        
        curl -X POST http://localhost:8080/__admin/mappings/import \
          -H "Content-Type: application/json" \
          -d @wiremock-mappings/conversations-list.json
        
        curl -X POST http://localhost:8080/__admin/mappings/import \
          -H "Content-Type: application/json" \
          -d @wiremock-mappings/users-list.json
    
    - name: Start WebSocket server
      run: |
        python scripts/start_mock.py --websocket-port 8765 &
        sleep 5
    
    - name: Run Slack integration tests
      run: |
        pytest tests/test_slack_integration.py -v --tb=short
    
    - name: Run test client
      run: |
        python scripts/test_client.py
    
    - name: Generate test report
      if: always()
      run: |
        pytest --html=report.html --self-contained-html
        echo "Test report generated: report.html"
    
    - name: Upload test report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: slack-test-report
        path: report.html
